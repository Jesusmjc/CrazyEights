//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Host.ReferenciaServicioManejoJugadores {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReferenciaServicioManejoJugadores.IServicioManejoJugadores")]
    public interface IServicioManejoJugadores {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/GuardarJugador", ReplyAction="http://tempuri.org/IServicioManejoJugadores/GuardarJugadorResponse")]
        int GuardarJugador(CrazyEightsServicio.Usuario usuario, CrazyEightsServicio.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/GuardarJugador", ReplyAction="http://tempuri.org/IServicioManejoJugadores/GuardarJugadorResponse")]
        System.Threading.Tasks.Task<int> GuardarJugadorAsync(CrazyEightsServicio.Usuario usuario, CrazyEightsServicio.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/ValidarInicioSesion", ReplyAction="http://tempuri.org/IServicioManejoJugadores/ValidarInicioSesionResponse")]
        bool ValidarInicioSesion(CrazyEightsServicio.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/ValidarInicioSesion", ReplyAction="http://tempuri.org/IServicioManejoJugadores/ValidarInicioSesionResponse")]
        System.Threading.Tasks.Task<bool> ValidarInicioSesionAsync(CrazyEightsServicio.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/ValidarNombreUsuarioRegistrado", ReplyAction="http://tempuri.org/IServicioManejoJugadores/ValidarNombreUsuarioRegistradoRespons" +
            "e")]
        bool ValidarNombreUsuarioRegistrado(CrazyEightsServicio.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/ValidarNombreUsuarioRegistrado", ReplyAction="http://tempuri.org/IServicioManejoJugadores/ValidarNombreUsuarioRegistradoRespons" +
            "e")]
        System.Threading.Tasks.Task<bool> ValidarNombreUsuarioRegistradoAsync(CrazyEightsServicio.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/ValidarCorreoElectronicoRegistrado", ReplyAction="http://tempuri.org/IServicioManejoJugadores/ValidarCorreoElectronicoRegistradoRes" +
            "ponse")]
        bool ValidarCorreoElectronicoRegistrado(CrazyEightsServicio.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/ValidarCorreoElectronicoRegistrado", ReplyAction="http://tempuri.org/IServicioManejoJugadores/ValidarCorreoElectronicoRegistradoRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> ValidarCorreoElectronicoRegistradoAsync(CrazyEightsServicio.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/EnviarCodigoAlCorreoDelUsuario", ReplyAction="http://tempuri.org/IServicioManejoJugadores/EnviarCodigoAlCorreoDelUsuarioRespons" +
            "e")]
        string EnviarCodigoAlCorreoDelUsuario(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioManejoJugadores/EnviarCodigoAlCorreoDelUsuario", ReplyAction="http://tempuri.org/IServicioManejoJugadores/EnviarCodigoAlCorreoDelUsuarioRespons" +
            "e")]
        System.Threading.Tasks.Task<string> EnviarCodigoAlCorreoDelUsuarioAsync(string correoElectronico);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioManejoJugadoresChannel : Host.ReferenciaServicioManejoJugadores.IServicioManejoJugadores, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioManejoJugadoresClient : System.ServiceModel.ClientBase<Host.ReferenciaServicioManejoJugadores.IServicioManejoJugadores>, Host.ReferenciaServicioManejoJugadores.IServicioManejoJugadores {
        
        public ServicioManejoJugadoresClient() {
        }
        
        public ServicioManejoJugadoresClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioManejoJugadoresClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioManejoJugadoresClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioManejoJugadoresClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GuardarJugador(CrazyEightsServicio.Usuario usuario, CrazyEightsServicio.Jugador jugador) {
            return base.Channel.GuardarJugador(usuario, jugador);
        }
        
        public System.Threading.Tasks.Task<int> GuardarJugadorAsync(CrazyEightsServicio.Usuario usuario, CrazyEightsServicio.Jugador jugador) {
            return base.Channel.GuardarJugadorAsync(usuario, jugador);
        }
        
        public bool ValidarInicioSesion(CrazyEightsServicio.Usuario usuario) {
            return base.Channel.ValidarInicioSesion(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarInicioSesionAsync(CrazyEightsServicio.Usuario usuario) {
            return base.Channel.ValidarInicioSesionAsync(usuario);
        }
        
        public bool ValidarNombreUsuarioRegistrado(CrazyEightsServicio.Jugador jugador) {
            return base.Channel.ValidarNombreUsuarioRegistrado(jugador);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarNombreUsuarioRegistradoAsync(CrazyEightsServicio.Jugador jugador) {
            return base.Channel.ValidarNombreUsuarioRegistradoAsync(jugador);
        }
        
        public bool ValidarCorreoElectronicoRegistrado(CrazyEightsServicio.Usuario usuario) {
            return base.Channel.ValidarCorreoElectronicoRegistrado(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCorreoElectronicoRegistradoAsync(CrazyEightsServicio.Usuario usuario) {
            return base.Channel.ValidarCorreoElectronicoRegistradoAsync(usuario);
        }
        
        public string EnviarCodigoAlCorreoDelUsuario(string correoElectronico) {
            return base.Channel.EnviarCodigoAlCorreoDelUsuario(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<string> EnviarCodigoAlCorreoDelUsuarioAsync(string correoElectronico) {
            return base.Channel.EnviarCodigoAlCorreoDelUsuarioAsync(correoElectronico);
        }
    }
}
